##########################
# Required configuration #
##########################
#sonar服务器上的访问地址后缀,比如我们可以设置下面的属性为ios，就可以通过http://server:port/dashboard/index/ios来访问该项目的数据
sonar.projectKey=AlicloudHttpDNS
#项目的名称
sonar.projectName=AlicloudHttpDNS
#版本号
sonar.projectVersion=1.6.19
sonar.language=objectivec
 
# Project description
sonar.projectDescription=test for sonar-objective-c
 
# Path to source directories 工程文件目录
sonar.sources=AlicloudHttpDNS
# Path to test directories (comment if no test) 测试文件目录
sonar.tests=AlicloudHttpDNSTests
# 要检测的测试源码目录，如果没有注释掉即可
# sonar.tests=testSrcDir
sonar.objc.file.suffixes=.h,.m

# Code Sign 注意是Release版本的前面与描述文件 (V2.1版本已经不需要此设置)
# sonar.objectivec.codesign=
# sonar.objectivec.profilename=

 
# Xcode project configuration (.xcodeproj or .xcworkspace)
# -> If you have a project: configure only sonar.objectivec.project
# -> If you have a workspace: configure sonar.objectivec.workspace and sonar.objectivec.project
# and use the later to specify which project(s) to include in the analysis (comma separated list)

# !! 以下二选一 !!
sonar.objectivec.project=AlicloudHttpDNS.xcodeproj
#sonar.objectivec.workspace=xx.xcworkspace

# Scheme to build your application
# 应用的scheme信息，如果不知道没关系，先执行该脚本，它会提示你当前项目的scheme信息
sonar.objectivec.appScheme=AlicloudHttpDNS
# Scheme to build and run your tests (comment following line of you don't have any tests)
# 同上，只是用于测试，如果没有就直接注释掉
sonar.objectivec.testScheme=AlicloudHttpDNSTests
 sonar.objectivec.simulator="platform=iOS Simulator,name=iPhone 6"
##########################
# Optional configuration #
##########################

# Encoding of the source code
sonar.sourceEncoding=UTF-8

# JUnit report generated by run-sonar.sh is stored in sonar-reports/TEST-report.xml
# Change it only if you generate the file on your own
# The XML files have to be prefixed by TEST- otherwise they are not processed 
# sonar.junit.reportsPath=sonar-reports/
sonar.objectivec.junit.reportsPath=TEST-report.xml

# Cobertura report generated by run-sonar.sh is stored in sonar-reports/coverage.xml
# Change it only if you generate the file on your own
# sonar.objectivec.coverage.reportPattern=sonar-reports/coverage*.xml
sonar.objectivec.cobertura.reportPath=sonar-reports/coverage-AlicloudHttpDNS.xml

# OCLint report generated by run-sonar.sh is stored in sonar-reports/oclint.xml
# Change it only if you generate the file on your own
sonar.objectivec.oclint.reportPath=oclint.xml

# Paths to exclude from coverage report (tests, 3rd party libraries etc.)
# sonar.objectivec.excludedPathsFromCoverage=pattern1,pattern2
sonar.objectivec.excludedPathsFromCoverage=.*Tests.*
sonar.jdbc.username=sonar
sonar.jdbc.password=sonar
sonar.login=admin
sonar.password=admin
sonar.jdbc.driverClassName=com.mysql.jdbc.Driver
sonar.host.url=http\://localhost\:9000
sonar.jdbc.url=jdbc\:mysql\://localhost\:3306/sonar

# Project SCM settings
sonar.scm.enabled=false
sonar.scm.disabled=true
# sonar.scm.url=scm:git:https://...
#sonar.scm.provider=svn
#sonar.scm.provider=svn